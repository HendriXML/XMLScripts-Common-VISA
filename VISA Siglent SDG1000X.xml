<?xml version="1.0" encoding="utf-8" standalone="no"?>
<pkg:Library
  xsi:schemaLocation="urn:schemas-www-wisware.nl-scriptingpackages ../XmlSchemas.Common.XmlScript/XMLScripting.Packages.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:schemas-www-wisware.nl-xmlscripting"
  xmlns:pkg="urn:schemas-www-wisware.nl-scriptingpackages"
  xmlns:sys="urn:schemas-www-wisware.nl-xmlscripting"
  xmlns:ado="urn:schemas-www-wisware.nl-xmlscripting-ado"
  xmlns:fil="urn:schemas-www-wisware.nl-xmlscripting-filemanagement"
  xmlns:fwl="urn:schemas-www-wisware.nl-xmlscripting-windowsfirewall"
  xmlns:inx="urn:schemas-www-wisware.nl-xmlscripting-index"
  xmlns:lil="urn:schemas-www-wisware.nl-xmlscripting-linkedlist"
  xmlns:msx="urn:schemas-www-wisware.nl-xmlscripting-xml"
  xmlns:reg="urn:schemas-www-wisware.nl-xmlscripting-registry"
  xmlns:rep="urn:schemas-www-wisware.nl-xmlscripting-report"
  xmlns:sts="urn:schemas-www-wisware.nl-xmlscripting-showstatus"
  xmlns:syu="urn:schemas-www-wisware.nl-xmlscripting-sysutils"
  xmlns:stm="urn:schemas-www-wisware.nl-xmlscripting-statemanagement">
  <Uses>
    <Use Identifier="ElectronicUtils"/>
    <Use Identifier="VISAInstrument"/>
  </Uses>

  <Type>
    <Enumeration Identifier="TSDGChannel" Elements="CH1, CH2" LowAlias="Low" HighAlias="High"/>

    <DataClass Identifier="TSiglentSDG1000XIniHelper" Inherit="TIniHelper" DefaultConstructor="none">
    </DataClass>

    <DataClass Identifier="TSiglentSDG1000X" Inherit="TVISAInstrument" ClassOfIdentifier="TTSiglentSDG1000X">
    </DataClass>

  </Type>
  <Constants>
    <Constant Identifier="SDG1000XFixedSamples" Type="UInt32" Expression="16384"/>

    <Constant Identifier="cVidSDGChannelCH1" Type="ViString" Expression="'C1'"/>
    <Constant Identifier="cVidSDGChannelCH2" Type="ViString" Expression="'C2'"/>
    
    <Constant Identifier="cNameSDGChannelCH1" Type="string" Expression="'CH1'"/>
    <Constant Identifier="cNameSDGChannelCH2" Type="string" Expression="'CH2'"/>

    <Constant Identifier="cOUTPutQuery" Type="ViString" Expression="':OUTPut?'"/>
    <Constant Identifier="cOUTPutCommand" Type="ViString" Expression="':OUTPut '"/>

    <Constant Identifier="cDCCommand" Type="ViString" Expression="':BSWV WVTP,DC,OFST,'"/>
    <Constant Identifier="cSineCommand" Type="ViString" Expression="':BSWV WVTP,SINE,FRQ,%s,AMP,%s,OFST,%s'"/>

    <Constant Identifier="sErrorInvalidSDGChannel" Type="string" Expression="'Invalid SDGChannel'"/>
  </Constants>
  
  <Variables>
    <Variable Identifier="ucDC" Type="TUnitConvertor" Init="TUnitConvertor.Create(TGranularity.Femto, TSiUnit.Volt)"/>
    <Variable Identifier="SDGChannelVidIndex" Type="TMappingCaseInSensitiveViStringToInt64"/>
    <Variable Identifier="SDGChannelNameIndex" Type="TMappingCaseInSensitiveViStringToInt64"/>
  </Variables>

  <Procedures>
    <Function Identifier="TTSiglentSDG1000X.ChannelName" Type="ViString" IsDeterministic="true">
      <Parameters>
        <Parameter Identifier="Value" Type="TSDGChannel"/>
      </Parameters>
      <Block>
        <Case Expression="Value" Optimalisation="integermapping">
          <On Select="TSDGChannel.CH1">
            <Execute Statement="Result:= cNameSDGChannelCH1"/>
          </On>
          <On Select="TSDGChannel.CH2">
            <Execute Statement="Result:= cNameSDGChannelCH2"/>
          </On>
          <Otherwise>
            <Raise Expression="Exception.Create(sErrorInvalidSDGChannel)"/>
          </Otherwise>
        </Case>
      </Block>
    </Function>

    <Function Identifier="TTSiglentSDG1000X.ChannelFromName" Type="TSDGChannel" IsDeterministic="true">
      <Parameters>
        <Parameter Identifier="Value" Type="string"/>
      </Parameters>
      <Block>
        <Block Condition="IsEmpty(SDGChannelNameIndex)">
          <Execute Statement="SDGChannelNameIndex:= TMappingCaseInSensitiveViStringToInt64.Create"/>
          <ForLoop Indexer="I" From="TSDGChannel.Low" To="TSDGChannel.High">
            <inx:Index.MapValue Index="SDGChannelNameIndex" Key="ChannelName(I)" Value="I"/>
          </ForLoop>
        </Block>
        <Variable Identifier="Found" Type="Boolean"/>
        <inx:Index.FindValue Index="SDGChannelNameIndex" Key="Value" Value="Result" Found="Found" Flags="NoErrorOnNotFound"/>
        <Raise Expression="Exception.Create(sErrorInvalidSDGChannel)" Condition="not Found"/>
      </Block>
    </Function>
    
    <Function Identifier="TTSiglentSDG1000X.ChannelVid" Type="ViString" IsDeterministic="true">
      <Parameters>
        <Parameter Identifier="Value" Type="TSDGChannel"/>
      </Parameters>
      <Block>
        <Case Expression="Value" Optimalisation="integermapping">
          <On Select="TSDGChannel.CH1">
            <Execute Statement="Result:= cVidSDGChannelCH1"/>
          </On>
          <On Select="TSDGChannel.CH2">
            <Execute Statement="Result:= cVidSDGChannelCH2"/>
          </On>
          <Otherwise>
            <Raise Expression="Exception.Create(sErrorInvalidSDGChannel)"/>
          </Otherwise>
        </Case>
      </Block>
    </Function>

    <Function Identifier="TTSiglentSDG1000X.ChannelFromVid" Type="TSDGChannel" IsDeterministic="true">
      <Parameters>
        <Parameter Identifier="Value" Type="string"/>
      </Parameters>
      <Block>
        <Block Condition="IsEmpty(SDGChannelVidIndex)">
          <Execute Statement="SDGChannelVidIndex:= TMappingCaseInSensitiveViStringToInt64.Create"/>
          <ForLoop Indexer="I" From="TSDGChannel.Low" To="TSDGChannel.High">
            <inx:Index.MapValue Index="SDGChannelVidIndex" Key="ChannelVid(I)" Value="I"/>
          </ForLoop>
        </Block>
        <Variable Identifier="Found" Type="Boolean"/>
        <inx:Index.FindValue Index="SDGChannelVidIndex" Key="Value" Value="Result" Found="Found" Flags="NoErrorOnNotFound"/>
        <Raise Expression="Exception.Create(sErrorInvalidSDGChannel)" Condition="not Found"/>
      </Block>
    </Function>

    <Constructor Identifier="TSiglentSDG1000X.Create">
      <Parameters>
        <Parameter Identifier="VisaResource" Type="TVisaResource"/>
      </Parameters>
      <Block>
        <Execute Statement="inherited Create(VisaResource)" />
      </Block>
    </Constructor>

    <Property Identifier="TSiglentSDG1000X.Enabled" Type="Boolean">
      <Parameters>
        <Parameter Identifier="Channel" Type="TSDGChannel"/>
      </Parameters>
      <Getter>
        <Execute Statement="Result:= QueryOnOff(ChannelVid(Channel) + cOUTPutQuery)"/>
      </Getter>
      <Setter>
        <Execute Statement="WriteOnOff(ChannelVid(Channel)  + cOUTPutCommand, Value)"/>
      </Setter>
    </Property>

    <Procedure Identifier="TSiglentSDG1000X.SetDC">
      <Parameters>
        <Parameter Identifier="Channel" Type="TSDGChannel"/>
        <Parameter Identifier="Value" Type="Extended"/>
      </Parameters>
      <Block>
        <Execute Statement="WriteString(ChannelVid(Channel) + cDCCommand + FloatToCode(Value))"/>
      </Block>
    </Procedure>

    <Procedure Identifier="TSiglentSDG1000X.SetConvDC">
      <Parameters>
        <Parameter Identifier="Channel" Type="TSDGChannel"/>
        <Parameter Identifier="Value" Type="ConvInt"/>
      </Parameters>
      <Block>
        <Execute Statement="WriteString(ChannelVid(Channel) + cDCCommand + ucDC.IntValueToEngineeringStr(Value, TUnitPostFix.None, viDecimalSeperatior))"/>
      </Block>
    </Procedure>

    <Procedure Identifier="TSiglentSDG1000X.SetSine">
      <Parameters>
        <Parameter Identifier="Channel" Type="TSDGChannel"/>
        <Parameter Identifier="Frequency" Type="Extended"/>
        <Parameter Identifier="Amplitude" Type="Extended"/>
        <Parameter Identifier="Offset" Type="Extended"/>
      </Parameters>
      <Block>
        <Execute Statement="WriteString(ChannelVid(Channel) + Format(cSineCommand, FloatToCode(Frequency), FloatToCode(Amplitude), FloatToCode(Offset)))"/>
      </Block>
    </Procedure>

    <Function Identifier="TSiglentSDG1000XIniHelper.ReadChannel" Type="TSDGChannel">
      <Parameters>
        <Parameter Identifier="Key" Type="string"/>
        <Parameter Identifier="Default" Type="TSDGChannel"/>
      </Parameters>
      <Block>
        <Variable Identifier="DefaultString" Type="string" Init="TSiglentSDG1000X.ChannelName(Default)"/>
        <Variable Identifier="ResultS" Type="string" Init="Inifile.ReadString(CurrentSection, Key, DefaultString)"/>
        <Execute Statement="Result:= TSiglentSDG1000X.ChannelFromName(ResultS)"/>
        <rep:Reporter.Information Text="Format('%s=%s', Key, TSiglentSDG1000X.ChannelName(Result))" Condition="EnableEcho"/>
      </Block>
    </Function>
    
    <Function Identifier="TSiglentSDG1000XIniHelper.ConvReadDC" Type="ConvInt">
      <Parameters>
        <Parameter Identifier="Key" Type="string"/>
        <Parameter Identifier="Default" Type="string"/>
      </Parameters>
      <Block>
        <Execute Statement="Result:= ReadConvInt(Key, ucDC, Default)"/>
      </Block>
    </Function>
  </Procedures>

  <Finalization>
    <Free Identifier="SDGChannelNameIndex"/>
    <Free Identifier="SDGChannelVidIndex"/>
  </Finalization>
</pkg:Library>